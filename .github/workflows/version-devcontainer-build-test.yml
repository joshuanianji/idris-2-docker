name: Build and Test a Single Version (Devcontainer)

on:
  workflow_call:
    inputs:
      idris-lsp-version:
        required: true
        type: string
      idris-version:
        required: true
        type: string

# Don't allow us to read from packages
permissions:
  contents: read

jobs:
  devcontainer-build-test:
    name: Build Devcontainer - ${{ inputs.idris-lsp-version }}
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    env:
      BASE_TAG: localhost:5000/base-${{ inputs.idris-version }}:latest
      TAG: idris-devcontainer-${{ inputs.idris-lsp-version }}:test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      - name: Setup Buildx (no ARM)
        uses: docker/setup-buildx-action@v2
        with:
          # since we're using a local registry
          driver-opts: network=host
        
      - name: Get Latest Idris Commit SHA
        id: get-sha
        uses: ./.github/actions/get-idris-sha
      
      # Building base because devcontainer image depends on it for idris binary
      # only using cache-from because this should already be cached (we won't be writing to cache)
      - name: Build Base
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: base.Dockerfile
          build-args: | 
            IDRIS_VERSION=${{ inputs.idris-version }}
            IDRIS_SHA=${{ steps.get-sha.outputs.sha }}
          tags: ${{ env.BASE_TAG }}
          # push to local registry
          push: true
          cache-from: type=gha,scope=build-base-${{ inputs.idris-version }}
      
      - name: Run `docker image ls`
        run: docker image ls

      - name: Build Devcontainer
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: devcontainer.Dockerfile
          build-args: | 
            IDRIS_LSP_VERSION=${{ inputs.idris-lsp-version }}
            IDRIS_LSP_SHA=${{ steps.get-sha.outputs.lsp-sha }}
            IDRIS_VERSION=${{ inputs.idris-version }}
            IDRIS_SHA=${{ steps.get-sha.outputs.idris-sha }}
            BASE_IMG=${{ env.BASE_TAG }}
          load: true
          tags: ${{ env.TAG }}
          cache-from: type=gha,scope=build-devcontainer-${{ inputs.idris-lsp-version }}
          cache-to: type=gha,mode=max,scope=build-devcontainer-${{ inputs.idris-lsp-version }}

      
      - name: Setup Bats and Bats libs
        uses: brokenpip3/setup-bats-libs@1.5.2
        with:
          bats-version: '1.10.0'
          support-version: 0.3.0
          support-path: '${{ github.workspace }}/.bats/bats-support'
          assert-version: 2.1.0
          assert-path: '${{ github.workspace }}/.bats/bats-assert'
          file-install: false
          detik-install: false

      # LIB_PATH is a env var I use in the setup() function of my bats tests
      # it points to the folder containing bats-assert and bats-support
      - name: Run Test
        env:
          LIB_PATH: /usr/lib/
          DOCKER_IMAGE: ${{ env.TAG }}
        run: bats tests/devcontainer-idris.bats
