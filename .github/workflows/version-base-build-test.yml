name: Build and Test a Single Version (Base + Consumers)

on:
  workflow_call:
    inputs:
      idris-version:
        required: true
        type: string

# Don't allow us to read from packages
permissions:
  contents: read

jobs:
  base-build:
    name: Build Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: MrSquaare/ssh-setup-action@v3
        with:
          host: ${{ secrets.SSH_IP }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          private-key-name: oracle-arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          append: |
            - endpoint: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_IP }}

      - name: Test docker buildx
        run: docker buildx ls
      
      - name: Build Base Image
        uses: ./.github/actions/build-base-img
        with:
          idris-version: ${{ inputs.idris-version }}

  base-test-1:
    name: Test 1 Base
    runs-on: ubuntu-latest
    needs: base-build
    env:
      TAG: ghcr.io/${{ github.repository }}/base:${{ inputs.idris-version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Base Image
        uses: ./.github/actions/build-base-img
        with:
          idris-version: ${{ inputs.idris-version }}
          load: true 
          tags: ${{ env.TAG }}

      - name: Setup Bats and Bats libs
        uses: bats-core/bats-action@1.5.4
        with:
          bats-version: 1.10.0
          support-version: 0.3.0
          support-path: ${{ github.workspace }}/.bats/bats-support
          assert-version: 2.1.0
          assert-path: ${{ github.workspace }}/.bats/bats-assert
          file-install: false
          detik-install: false
  
      # LIB_PATH is a env var I use in the setup() function of my bats tests
      # it points to the folder containing bats-assert and bats-support
      - name: Run Test
        env:
          LIB_PATH: ${{ github.workspace }}/.bats
          DOCKER_IMAGE: ${{ env.TAG }}
          IDRIS_VERSION: ${{ inputs.idris-version }}
        run: bats tests/base.bats

  base-test-2:
    name: Test 2 Base
    runs-on: ubuntu-latest
    needs: base-build
    env:
      TAG: idris-base-${{ inputs.idris-version }}:test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
              
      - name: Build Base Image
        uses: ./.github/actions/build-base-img
        with:
          idris-version: ${{ inputs.idris-version }}
          load: true 
          tags: ${{ env.TAG }}
      
      - name: Run Test
        run: |
          docker run ${{ env.TAG }} /bin/bash -c "make test"

  # "consumer" images just "consume" the base image and do nothing else
  # basic tests for these
  consumer-build-test:
    name: Build Consumer
    runs-on: ubuntu-latest
    needs: [base-test-1, base-test-2]
    strategy:
      matrix:
        dockerfile: [debian, ubuntu]
    # use a local registry
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    env:
      # use local registry so we can reference the base image in another dockerfile
      # https://github.com/docker/build-push-action/issues/738
      BASE_TAG: localhost:5000/base-${{ inputs.idris-version }}:latest
      TAG: idris-consumer-${{ matrix.dockerfile }}-${{ inputs.idris-version }}:test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Setup Buildx (no ARM)
        uses: docker/setup-buildx-action@v3
        with:
          # since we're using a local registry
          driver-opts: network=host
      
      - name: Build Base Image
        uses: ./.github/actions/build-base-img
        with:
          idris-version: ${{ inputs.idris-version }}
          push: true
          tags: ${{ env.BASE_TAG }}

      - name: Run `docker image ls`
        run: docker image ls

      - name: Build ${{ matrix.dockerfile}}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}.Dockerfile
          build-args: | 
            IDRIS_VERSION=${{ inputs.idris-version }}
            BASE_IMG=${{ env.BASE_TAG }}
          tags: ${{ env.TAG }}
          load: true
      
      - name: Setup Bats and Bats libs
        uses: bats-core/bats-action@1.5.4
        with:
          bats-version: 1.10.0
          support-version: 0.3.0
          support-path: ${{ github.workspace }}/.bats/bats-support
          assert-version: 2.1.0
          assert-path: ${{ github.workspace }}/.bats/bats-assert
          file-install: false
          detik-install: false

      # LIB_PATH is a env var I use in the setup() function of my bats tests
      # it points to the folder containing bats-assert and bats-support
      - name: Run Test
        env:
          LIB_PATH: ${{ github.workspace }}/.bats
          DOCKER_IMAGE: ${{ env.TAG }}
          IDRIS_VERSION: ${{ inputs.idris-version }}
        run: bats tests/consumer-idris.bats
