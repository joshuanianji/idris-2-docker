name: Deploy One Version

on:
  workflow_call:
    inputs:
      idris-version:
        required: true
        type: string

permissions:
  packages: write
  contents: read

env:
  BASE_TAG: localhost:5000/${{ github.repository }}/base:latest

jobs:
  build-base:
    name: Build Base - ${{ inputs.idris-version }}
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Get Latest Idris Commit SHA
        id: get-sha
        uses: ./.github/actions/get-idris-sha

      # - name: Docker meta
      #   id: create-meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: localhost:5000/${{ github.repository }}/base
      #     tags: |
      #       type=semver,pattern={{version}},value=${{ inputs.idris-version }}
      #       type=semver,pattern={{major}}.{{minor}},value=${{ inputs.idris-version }}
      #       type=semver,pattern={{major}},value=${{ inputs.idris-version }}
      #       type=raw,value=latest,enable=${{ inputs.idris-version == 'latest' }}

      - name: Build Base
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          file: base.Dockerfile
          build-args: | 
            IDRIS_VERSION=${{ inputs.idris-version }}
            IDRIS_SHA=${{ steps.get-sha.outputs.sha }}
          tags: ${{ env.BASE_TAG }} 
          push: true
          # When doing matrix builds, we need to scope the image
          # https://github.com/moby/buildkit/issues/2885
          cache-from: type=gha,scope=build-base-${{ inputs.idris-version }}
          cache-to: type=gha,mode=max,scope=build-base-${{ inputs.idris-version }}
      
      - name: Check Images
        run: |
          docker images ls
          docker buildx imagetools inspect localhost:5000/${{ github.repository }}/base

  build-consumers:
    name: Deploy Consumer - ${{ matrix.dockerfile }} ${{ inputs.idris-version }}
    needs: build-base
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: [ubuntu, debian]
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      
      # instead of native builds, we'll just use QEMU for consumers
      # consumer builds don't really do much intensive stuff anyway
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
        with:
          # since we're using a local registry
          driver-opts: network=host

      - name: Docker meta
        id: create-meta
        uses: docker/metadata-action@v4
        with:
          images: localhost:5000/${{ github.repository }}/${{ matrix.dockerfile }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.idris-version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.idris-version }}
            type=semver,pattern={{major}},value=${{ inputs.idris-version }}
            type=raw,value=latest,enable=${{ inputs.idris-version == 'latest' }}

      # here, we assume the base image is already built and pushed to GHCR
      # not sure if this is a good idea!!
      - name: Build and Push ${{ matrix.dockerfile}}
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          file: ${{ matrix.dockerfile }}.Dockerfile
          tags: ${{ steps.create-meta.outputs.tags }}
          build-args: | 
            IDRIS_VERSION=${{ inputs.idris-version }}
          push: true
      
      - name: Check Images
        run: |
          docker images
          docker buildx imagetools inspect localhost:5000/${{ github.repository }}/${{ matrix.dockerfile }}

