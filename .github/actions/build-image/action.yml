name: Build Image
description: Builds a Docker Image

inputs:
  build-arm:
    description: "Whether to build arm or not. 'true' or 'false'"
    required: false
    default: false
    type: boolean
  ssh_private_key:
    description: "The private key to use to connect to the builder"
    required: false
  ssh_user:
    description: "The user to use to connect to the builder"
    required: false
  ssh_ip:
    description: "The IP to use to connect to the builder"
    required: false
  version:
    description: "The version of Idris to build"
    required: true
    type: string
  dockerfile:
    description: "Either 'base', 'debian', 'ubuntu' or 'devcontainer"
    required: true
    type: string
  # somehow, composable actions cannot reference github context
  repo:
    description: "value of github.repository env var"
    required: true 
    type: string
  base-img:
    description: "Sets the BASE_IMG argument (when building debian or ubuntu)"
    required: false
    type: string
    default: ""
  tag:
    description: "tag of the image"
    required: false
    type: string
  build-args:
    description: "All other build Args"
    required: false
    type: string

outputs:
  imageid:
    description: "Image ID"
    value: ${{ steps.build-image.outputs.imageid }}


runs:
  using: composite
  steps:
    - name: Setup Buildx (ARM)
      if: ${{ inputs.build-arm == 'true' }}
      uses: "./.github/actions/setup-buildx"
      with:
        ssh_private_key: ${{ inputs.ssh_private_key }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_ip: ${{ inputs.ssh_ip }}
    
    - name: Setup Buildx (no ARM)
      if: ${{ inputs.build-arm != 'true' }}
      uses: docker/setup-buildx-action@v2

    - name: Get Latest Idris Commit SHA
      id: get-sha
      uses: ./.github/actions/get-idris-sha

    # get variables that change depending on if we're building with ARM or not
    - name: ARM/No ARM vars
      id: get-arm-vars
      run: |
        echo "name=platforms::$(if [ ${{ inputs.build-arm }} ]; then echo "linux/arm64,linux/amd64"; else echo "linux/amd64"; fi)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Build
      uses: docker/build-push-action@v4.1.1
      id: build-image
      with:
        context: .
        platforms: ${{ steps.get-arm-vars.outputs.platforms }}
        file: ${{ inputs.dockerfile }}.Dockerfile
        # not all the images need all these build args, but we put this here anyway
        build-args: | 
          IDRIS_VERSION=${{ inputs.version }}
          IDRIS_SHA=${{ steps.get-sha.outputs.sha }}
          ${{ inputs.build-args }}
        tags: ${{ inputs.tag }}
        load: ${{ inputs.build-arm != 'true' }}

        # When doing matrix builds, we need to scope the image
        # https://github.com/moby/buildkit/issues/2885
        cache-from: type=gha,scope=build-test-${{ inputs.dockerfile }}-${{ inputs.version }}
        cache-to: type=gha,mode=max,scope=build-test-${{ inputs.dockerfile }}-${{ inputs.version }}
